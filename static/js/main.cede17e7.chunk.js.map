{"version":3,"sources":["components/OccupationSearch.jsx","components/FuseSearch.jsx","components/TextSearch.jsx","components/JsOccSearch.jsx","App.js","serviceWorker.js","index.js"],"names":["resultRenderer","title","key","OccupationSearch","props","useState","isLoading","setIsLoading","query","setQuery","results","setResults","selectedOccupation","setSelectedOccupation","Form","Field","Search","fluid","input","icon","iconPosition","loading","onResultSelect","e","result","onSearchChange","_","debounce","value","setTimeout","length","queryFn","leading","Card","description","header","meta","defaultProps","FuseSearch","undefined","source","Error","fuse","Fuse","shouldSort","includeScore","threshold","location","distance","minMatchCharLength","keys","name","weight","search","map","item","nocTitle","combinedExamples","nocCode","nocLevel","TextSearch","_source","resultSort","resultA","resultB","localeCompare","re","RegExp","escapeRegExp","filter","test","sort","JsOccSearch","idxJsSearch","JsSearch","searchIndex","indexStrategy","addIndex","addDocuments","extendedOccupations","nocSource","nocData","concat","entry","index","id","naicsSource","naicsData","App","SearchComponents","Header","as","keyVal","panes","menuItem","render","Tab","Pane","attached","Container","style","marginBottom","Segment","vertical","defaultActiveIndex","menu","secondary","pointing","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oyvvHAMMA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,MAAe,CAACA,GAAS,yBAAKC,IAAI,SAASD,KAO5DE,EAAmB,SAACC,GAAW,IAAD,EACAC,oBAAS,GADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAERF,mBAAS,IAFD,mBAE3BG,EAF2B,KAEpBC,EAFoB,OAGJJ,mBAAS,IAHL,mBAG3BK,EAH2B,KAGlBC,EAHkB,OAIkBN,mBAAS,IAJ3B,mBAI3BO,EAJ2B,KAIPC,EAJO,KA6BlC,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,mFACA,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAO,CAAEC,KAAM,SAAUC,aAAc,QACvCC,QAASf,EACTgB,eA1BiB,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,OAC/Bf,EAAS,IACTI,EAAsBW,IAyBdC,eAAgBC,IAAEC,UAtBD,SAACJ,EAAD,GAAmB,IAAbK,EAAY,EAAZA,MAC/BrB,GAAa,GACbE,EAASmB,GAETC,YAAW,WACT,GAAID,EAAME,OAAS,EAAG,OAfxBvB,GAAa,GACbE,EAAS,SACTE,EAAW,IAcTJ,GAAa,GACbI,EAAWP,EAAM2B,QAAQH,MACxB,OAcoD,IAAK,CAClDI,SAAS,IAEXtB,QAASA,EACTV,eAAgBA,EAChB4B,MAAOpB,MAIXI,EAAmBX,OACnB,kBAACgC,EAAA,EAAD,CACEhB,OAAK,EACLiB,YAAatB,EAAmBsB,YAChCC,OAAQvB,EAAmBX,MAC3BmC,KAAMxB,EAAmBwB,SAUnCjC,EAAiBkC,aAAe,GAEjBlC,QC9BAmC,EA1CI,SAAClC,GAClB,QAAqBmC,IAAjBnC,EAAMoC,OAAsB,MAAM,IAAIC,MAAM,kCAEhD,IAAMC,EAAO,IAAIC,IACfvC,EAAMoC,OACN,CACEI,YAAY,EACZC,cAAc,EACdC,UAAW,GACXC,SAAU,EACVC,SAAU,GACVC,mBAAoB,EACpBC,KAAM,CAAC,CACLC,KAAM,WACNC,OAAQ,KACR,CACAD,KAAM,WACNC,OAAQ,OAgBd,OACE,kBAAC,EAAD,CAAkBlD,IAAI,OAAO6B,QAZb,SAACvB,GACjB,OAAOkC,EAAKW,OAAO7C,GAAO8C,KACxB,SAAA9B,GACE,MAAO,CACLvB,MAAOuB,EAAO+B,KAAKC,SACnBtB,YAAaV,EAAO+B,KAAKE,iBACzBrB,KAAK,QAAD,OAAUZ,EAAO+B,KAAKG,QAAtB,qBAA0ClC,EAAO+B,KAAKI,kBCCrDC,EA9BI,SAACxD,GAClB,QAAqBmC,IAAjBnC,EAAMoC,OAAsB,MAAM,IAAIC,MAAM,kCAEhD,IAAMoB,EAAUzD,EAAMoC,OAGhBsB,EAAa,SAACC,EAASC,GAAV,OAAuBD,EAAQP,SAAUS,cAAcD,EAAQR,WAelF,OACE,kBAAC,EAAD,CAAkBtD,IAAI,OAAO6B,QAdb,SAACvB,GACjB,IAAM0D,EAAK,IAAIC,OAAOzC,IAAE0C,aAAa5D,GAAQ,KAG7C,OAAOkB,IAAE4B,IACP5B,IAAE2C,OAAOR,GAHK,SAACrC,GAAD,OAAa0C,EAAGI,KAAK9C,EAAOgC,WAAaU,EAAGI,KAAK9C,EAAOiC,qBAG3Cc,KAAKT,IAChC,SAAAtC,GAAW,MAAO,CAChBvB,MAAOuB,EAAOgC,SACdtB,YAAaV,EAAOiC,iBACpBrB,KAAK,QAAD,OAAUZ,EAAOkC,QAAjB,qBAAqClC,EAAOmC,kB,QC4BzCa,EA5CK,SAACpE,GACnB,QAAqBmC,IAAjBnC,EAAMoC,OAAsB,MAAM,IAAIC,MAAM,gCAEhD,IAAMgC,EAAc,IAAIC,IAAgB,MAExCD,EAAYE,YAAc,IAAID,IAS9BD,EAAYG,cAAgB,IAAIF,IAQhCD,EAAYI,SAAS,YACrBJ,EAAYI,SAAS,oBACrBJ,EAAYK,aAAa1E,EAAMoC,QAW/B,OACE,kBAAC,EAAD,CAAkBtC,IAAI,YAAY6B,QAVlB,SAACvB,GACjB,OAAOiE,EAAYpB,OAAO7C,GAAO8C,KAAI,SAAA9B,GACnC,MAAO,CACLvB,MAAOuB,EAAOgC,SACdtB,YAAaV,EAAOiC,iBACpBrB,KAAK,QAAD,OAAUZ,EAAOkC,QAAjB,qBAAqClC,EAAOmC,kB,kBC3BlDoB,EAAsB,CAC1B,CACE,SAAY,cACZ,SAAY,KACZ,QAAW,KACX,iBAAoB,0BACpB,SAAY,CAAC,aAAc,eAE7B,CACE,SAAY,UACZ,SAAY,KACZ,QAAW,KACX,iBAAoB,GACpB,SAAY,IAEd,CACE,SAAY,UACZ,SAAY,KACZ,QAAW,KACX,iBAAoB,GACpB,SAAY,IAEd,CACE,SAAY,YACZ,SAAY,KACZ,QAAW,KACX,iBAAoB,gCACpB,SAAY,CAAC,eAAgB,MAAO,MAAO,YAGzCC,EAAYC,IAAQC,OAAOH,GAAqBzB,KAAI,SAAC6B,EAAOC,GAChE,OAAO,eACFD,EADL,CAEEE,GAAID,OAGFE,EAAcC,IAAUL,OAAOH,GAAqBzB,KAAI,SAAC6B,EAAOC,GACpE,OAAO,eACFD,EADL,CAEEE,GAAID,OAgDOI,MA5Cf,WACE,IAAMC,EAAmB,SAACrF,GACxB,OACE,oCACE,kBAACsF,EAAA,EAAD,CAAQC,GAAG,MAAX,QACA,kBAAC,EAAD,CAAYzF,IAAG,UAAKE,EAAMwF,OAAX,SAA0BpD,OAAQpC,EAAMoC,SACvD,kBAACkD,EAAA,EAAD,CAAQC,GAAG,MAAX,QACA,kBAAC,EAAD,CAAYzF,IAAG,UAAKE,EAAMwF,OAAX,SAA0BpD,OAAQpC,EAAMoC,SACvD,kBAACkD,EAAA,EAAD,CAAQC,GAAG,MAAX,aACA,kBAAC,EAAD,CAAazF,IAAG,UAAKE,EAAMwF,OAAX,OAAwBpD,OAAQpC,EAAMoC,WAYtDqD,EAAQ,CACZ,CACEC,SAAU,MACVC,OAAQ,kBAAM,kBAACC,EAAA,EAAIC,KAAL,CAAUC,UAAU,GAAO,kBAACT,EAAD,CAAkBvF,IAAI,OAAO0F,OAAO,OAAOpD,OAAQwC,OAE9F,CACEc,SAAU,QACVC,OAAQ,kBAAM,kBAACC,EAAA,EAAIC,KAAL,CAAUC,UAAU,GAAO,kBAACT,EAAD,CAAkBvF,IAAI,QAAQ0F,OAAO,QAAQpD,OAAQ8C,QAIlG,OACE,kBAACa,EAAA,EAAD,CAAWC,MAAO,CAAEC,aAAc,SAChC,kBAACC,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACb,EAAA,EAAD,CAAQC,GAAG,MAAX,yBAEF,kBAACW,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACP,EAAA,EAAD,CAAKQ,mBAAoB,EAAGC,KAAM,CAAEC,WAAW,EAAMC,UAAU,GAAQd,MAAOA,OC/ElEe,QACW,cAA7BC,OAAO9D,SAAS+D,UAEe,UAA7BD,OAAO9D,SAAS+D,UAEhBD,OAAO9D,SAAS+D,SAASC,MACvB,2DCZNC,IAASjB,OAEL,kBAAC,EAAD,MAEFkB,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cede17e7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\nimport { Search, Form, Card } from \"semantic-ui-react\";\nimport _ from 'lodash'\n\n\nconst resultRenderer = ({ title }) => [title && <div key='title'>{title}</div>];\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n}\n\n\nconst OccupationSearch = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [selectedOccupation, setSelectedOccupation] = useState({});\n\n  const resetState = () => {\n    setIsLoading(false);\n    setQuery('');\n    setResults([]);\n  }\n\n  const handleResultSelect = (e, { result }) =>  {\n    setQuery(''); //result.nocTitle\n    setSelectedOccupation(result);\n  }\n\n  const handleSearchChange = (e, { value }) => {\n    setIsLoading(true);\n    setQuery(value);\n\n    setTimeout(() => {\n      if (value.length < 1) return resetState()\n      setIsLoading(false)\n      setResults(props.queryFn(value))\n    }, 300)\n  }\n  \n\n  return (\n    <>\n      <Form>\n        <Form.Field>\n          <label>Type your job title and select the closest match</label>\n          <Search\n            fluid\n            input={{ icon: 'search', iconPosition: 'left' }}\n            loading={isLoading}\n            onResultSelect={handleResultSelect}\n            onSearchChange={_.debounce(handleSearchChange, 500, {\n              leading: true\n            })}\n            results={results}\n            resultRenderer={resultRenderer}\n            value={query}\n          />\n        </Form.Field>\n      </Form>\n      { selectedOccupation.title && \n        <Card\n          fluid\n          description={selectedOccupation.description}\n          header={selectedOccupation.title}\n          meta={selectedOccupation.meta}\n        />\n      }\n    </>\n  );\n};\n\nOccupationSearch.propTypes = {\n  queryFn: PropTypes.func.isRequired,\n}\nOccupationSearch.defaultProps = {}\n\nexport default OccupationSearch;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport Fuse from 'fuse.js'\nimport OccupationSearch from './OccupationSearch'\n\n\nconst FuseSearch = (props) => {\n  if (props.source === undefined) throw new Error('FuseSearch requires a \"source\"');\n\n  const fuse = new Fuse(\n    props.source, // \"source\" is the item array\n    {\n      shouldSort: true,\n      includeScore: true,\n      threshold: 0.2,\n      location: 0,\n      distance: 60,\n      minMatchCharLength: 3,\n      keys: [{\n        name: \"nocTitle\",\n        weight: .99,\n      },{\n        name: \"examples\",\n        weight: 0.3,\n      }]\n    }\n  );\n\n  const queryFunc = (query) => {\n    return fuse.search(query).map(\n      result => {\n        return {\n          title: result.item.nocTitle,\n          description: result.item.combinedExamples,\n          meta: `Code ${result.item.nocCode} -- Level ${result.item.nocLevel}`,\n        } // Mapping makes the consuming resultRender not dump all the props on the DOM\n      }\n    )\n  }\n  return (\n    <OccupationSearch key='fuse' queryFn={queryFunc} />\n  );\n};\n\nFuseSearch.propTypes = {\n  source: PropTypes.array.isRequired,\n}\n\nexport default FuseSearch;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport OccupationSearch from './OccupationSearch'\n\nconst TextSearch = (props) => {\n  if (props.source === undefined) throw new Error('TextSearch requires a \"source\"');\n\n  const _source = props.source;\n  \n  \n  const resultSort = (resultA, resultB) => (resultA.nocTitle).localeCompare(resultB.nocTitle)\n\n  const queryFunc = (query) => {\n    const re = new RegExp(_.escapeRegExp(query), 'i')\n    const isMatch = (result) => (re.test(result.nocTitle) || re.test(result.combinedExamples))\n\n    return _.map(\n      _.filter(_source, isMatch).sort(resultSort),\n      result => {return {\n        title: result.nocTitle,\n        description: result.combinedExamples,\n        meta: `Code ${result.nocCode} -- Level ${result.nocLevel}`,\n      }} // Mapping makes the consuming resultRender not dump all the props on the DOM\n    )\n  }\n  return (\n    <OccupationSearch key='lunr' queryFn={queryFunc} />\n  );\n};\n\nTextSearch.propTypes = {\n  source: PropTypes.array.isRequired,\n}\n\nexport default TextSearch;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport * as JsSearch from 'js-search'\nimport OccupationSearch from './OccupationSearch'\n\n\nconst JsOccSearch = (props) => {\n  if (props.source === undefined) throw new Error('JsSearch requires a \"source\"');\n\n  const idxJsSearch = new JsSearch.Search('id')\n  // default\n  idxJsSearch.searchIndex = new JsSearch.TfIdfSearchIndex();\n\n  // Search index capable of returning results matching a set of tokens\n  // but without any meaningful rank or order.\n  //idxJsSearch.searchIndex = new JsSearch.UnorderedSearchIndex();\n\n  /** -------- */\n  \n  // default -- And the best\n  idxJsSearch.indexStrategy = new JsSearch.PrefixIndexStrategy();\n\n  // this index strategy is built for all substrings matches.\n  //idxJsSearch.indexStrategy = new JsSearch.AllSubstringsIndexStrategy();\n\n  // this index strategy is built for exact word matches.\n  //idxJsSearch.indexStrategy = new JsSearch.ExactWordIndexStrategy();\n\n  idxJsSearch.addIndex('nocTitle')\n  idxJsSearch.addIndex('combinedExamples')\n  idxJsSearch.addDocuments(props.source)\n\n  const queryFunc = (query) => {\n    return idxJsSearch.search(query).map(result => {\n      return {\n        title: result.nocTitle,\n        description: result.combinedExamples,\n        meta: `Code ${result.nocCode} -- Level ${result.nocLevel}`,\n      }} // Mapping makes the consuming resultRender not dump all the props on the DOM\n    )\n  }\n  return (\n    <OccupationSearch key='js-search' queryFn={queryFunc} />\n  );\n};\n\nJsOccSearch.propTypes = {\n  source: PropTypes.array.isRequired,\n}\n\nexport default JsOccSearch;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Header, Segment, Tab } from 'semantic-ui-react'\nimport FuseSearch from './components/FuseSearch'\n//import LunrSearch from './components/LunrSearch'\nimport TextSearch from './components/TextSearch'\nimport JsOccSearch from './components/JsOccSearch'\nimport { data as nocData } from './data/noc-reduced-ext.json'\nimport { data as naicsData } from './data/naics-reduced-ext.json'\n\nconst extendedOccupations = [\n  {\n    \"nocTitle\": \"Not working\",\n    \"nocLevel\": \"-1\",\n    \"nocCode\": \"-1\",\n    \"combinedExamples\": \";unemployed;disability;\",\n    \"examples\": ['unemployed', 'disability']\n  },\n  {\n    \"nocTitle\": \"Retired\",\n    \"nocLevel\": \"-1\",\n    \"nocCode\": \"-1\",\n    \"combinedExamples\": \"\",\n    \"examples\": []\n  },\n  {\n    \"nocTitle\": \"Student\",\n    \"nocLevel\": \"-1\",\n    \"nocCode\": \"-1\",\n    \"combinedExamples\": \"\",\n    \"examples\": []\n  },\n  {\n    \"nocTitle\": \"Homemaker\",\n    \"nocLevel\": \"-1\",\n    \"nocCode\": \"-1\",\n    \"combinedExamples\": \";stay at home;mom;dad;parent;\",\n    \"examples\": ['stay at home', 'mom', 'dad', 'parent']\n  },\n];\nconst nocSource = nocData.concat(extendedOccupations).map((entry, index) => {\n  return {\n    ...entry,\n    id: index\n  }\n});\nconst naicsSource = naicsData.concat(extendedOccupations).map((entry, index) => {\n  return {\n    ...entry,\n    id: index\n  }\n});\n\nfunction App() {\n  const SearchComponents = (props) => {\n    return (\n      <>\n        <Header as=\"h3\">Text</Header>\n        <TextSearch key={`${props.keyVal}-text`} source={props.source} />\n        <Header as=\"h3\">Fuse</Header>\n        <FuseSearch key={`${props.keyVal}-fuse`} source={props.source} />\n        <Header as=\"h3\">JS Search</Header>\n        <JsOccSearch key={`${props.keyVal}-js`} source={props.source} />\n        { /*\n        <Header as=\"h3\">Lunr</Header>\n        <LunrSearch key={`${props.keyVal}-lunr`} source={props.source} />\n        */ }\n      </>\n    )\n  }\n  SearchComponents.propTypes = {\n    source: PropTypes.array.isRequired\n  }\n  \n  const panes = [\n    {\n      menuItem: 'NOC',\n      render: () => <Tab.Pane attached={false}><SearchComponents key='nocs' keyVal='nocs' source={nocSource} /></Tab.Pane>,\n    },\n    {\n      menuItem: 'NAICS',\n      render: () => <Tab.Pane attached={false}><SearchComponents key='naics' keyVal='naics' source={naicsSource}/></Tab.Pane>,\n    },\n  ]\n\n  return (\n    <Container style={{ marginBottom: '5rem'}}>\n      <Segment vertical>\n        <Header as=\"h1\">Occupation Explorers</Header>\n      </Segment>\n      <Segment vertical>\n        <Tab defaultActiveIndex={0} menu={{ secondary: true, pointing: true }} panes={panes} />\n      </Segment>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  /*<React.StrictMode>*/\n    <App />\n  /*</React.StrictMode>*/,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}